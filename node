1、一些概念
node 是基于异步的处理机制
cpu 时钟周期：1/cpu主频 周期越小，处理速度越快
处理时间 cpu < 内存 < 硬盘 < 网络
系统中同步与异步任务达到合适比例n的时候，系统才是最高效的，并不是全同步或全异步高效。
(Wc+Wp)/(Ws+Wp/p)

操作系统对计算机进行了抽象，将所有输入输出设备抽象为文件，内核进行文件i/o操作时，
通过文件描述符进行管理。应用程序如果需要进行io需要打开文件操作符，在进行文件和数据的读写，
异步io不带数据直接返回，要获取数据还需要通过文件描述符再次读取。

2、libuv和V8不是一个线程
LIBUV库  是Node的新跨平台抽象层，用于抽象 Windows 的 IOCP 及 linux 的 cunstom threadpool，实现事件循环（event loop）和通知机制
nginx实现负载均衡、反向代理  pm2做负载均衡，启动node程序 
nodejs代码是单线程的，可以通过两种机制启动 cluster、fork，pm2 start app.js

3、几个特殊API
1)、setTimeout和setInterval 线程池不参与
2)、process.nextTick() 实现类似setTimeout(function(){},0),每次调用放入队列中，在下一轮循环中取出
3)、setimmediate()比process.nextTick()优先级低

4)、node实现sleep

  function sleep(ms){
  return new Promise(resolve=>
    setTimeout(resolve,ms))
  }
  
  async function test(){
    console.log('hello');
    await sleep(1000);
    console.log('world');
  }
  
  test()
5、PM2是一个带有负载均衡功能的node应用的进程管理器
内建负载均衡（使用node cluster集群模块）
后台运行
0秒停机重载
具有ubuntu和centos的启动脚本
停止不稳定的进程
控制台检测
提供http api
远程控制和实时的接口api

6、node优势
预处理 server端模板 将后端变量打到前端
解决跨域 后端没有域的概念
seo/ssr 直出页面 服务的渲染 前后同构
安全 后端api代理给node 反向代理
前端端分离 没有后端java也可以跑

npm install --production

添加了production  参数后将仅仅安装 package.json 中dependencies 里面的包，不会安装devDependencies 里面的

